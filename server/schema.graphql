type Season {
  id: ID!
  year: Int!
}

type Team {
  id: ID
  abbr: String
  city: String
  name: String
}

type Stat {
  id: ID
  c_att: String
  carries: Int
  rushing_yards: Int
  passing_yards: Int
  score: Int
  longest_rush: Int
  longest_pass: Int
  total_plays: Int
  total_yards: Int
  ave_per_car: Float
  ave_per_att: Float
  ave_per_play: Float
  typa: Float
  typai: Float
  typc: Float
  typp: Float
}

type Game {
  id: ID
  date: String
  start_time: String
  game_clock: String
  kicking_team: Team
  away_team: Team
  home_team: Team
  away_full_game_stat: Stat
  home_full_game_stat: Stat
  away_first_half_stat: Stat
  home_first_half_stat: Stat
  full_game_opener: String
  full_game_closer: String
}

type User {
  id: ID!
  email: String!
}

type AuthPayload {
  user: User!
  token: String!
}

type Query {
  currentUser: User!
  seasons: [Season!]!
  games(date: String!): [Game!]!
}

type Mutation {
  login(email: String!, password: String!): AuthPayload!
}

type Subscription {
  gameUpdated: Game
}
